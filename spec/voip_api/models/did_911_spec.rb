require 'spec_helper'

module VoipApi
  describe DID911 do
    
    describe "concerning converting stuff from VOIP api casing to our standard camelcasing" do
      it "can give you a description of an attribute" do
        DID911.description(:location_id).should eq("ID generated by our 911 provider associated with the location")
        DID911.description(:tn).should eq("Telephone number")
        DID911.description(:caller_name).should eq("Name on file")
        DID911.description(:address1).should eq("Street and house number")
        DID911.description(:address2).should eq("Any additional information such as 'Apartment 1' or 'Suite 100' etc.")
        DID911.description(:city).should eq("City")
        DID911.description(:state).should eq("State")
        DID911.description(:zip_code).should eq("ZIP Code")
        DID911.description(:latitude).should eq("Latitude coordinate of the address on file")
        DID911.description(:longitude).should eq("longitude coordinate of the address on file")
        DID911.description(:status_code).should eq("GEOCODED or PROVISIONED (Older entries my be VERIFIED or UNVERIFIED)")
        DID911.description(:status_description).should eq("Describes the status code")
        DID911.description(:activated_time).should eq("Date/Time when the location was provisioned")
        DID911.description(:date_added).should eq("Date/Time the location was registered")
      end

      it "should be able to create a new DID911 from their erratic variable names" do
        hashie_params = VoipApi::Mapping::VoipDID911.new({
          locationId: 5,
          tn: "2015649083",
          callerName: "callerName",
          address1: "address1",
          address2: "address2",
          city: "city",
          state: "state",
          zipCode: "zipCode",
          latitude: "latitude",
          longitude: "longitude",
          statusCode: "statusCode",
          statusDescription: "statusDescription",
          activatedTime: "activatedTime",
          dateAdded: "dateAdded",
        })
        did_911 = DID911.new(hashie_params)
        did_911.location_id.should eq(5)
        did_911.tn.should eq("2015649083")
        did_911.caller_name.should eq("callerName")
        did_911.address1.should eq("address1")
        did_911.address2.should eq("address2")
        did_911.city.should eq("city")
        did_911.state.should eq("state")
        did_911.zip_code.should eq("zipCode")
        did_911.latitude.should eq("latitude")
        did_911.longitude.should eq("longitude")
        did_911.status_code.should eq("statusCode")
        did_911.status_description.should eq("statusDescription")
        did_911.activated_time.should eq("activatedTime")
        did_911.date_added.should eq("dateAdded")
      end
    end

    describe "concerning enumerable and sorting modules" do
      it "should be able to be sorted by telephone number" do
        @did_1 = DID911.new(tn: '4355551233')
        @did_2 = DID911.new(tn: '4355551234')
        [@did_2, @did_1].sort.should match_array([@did_1, @did_2])
      end
    end

  end
end
